/*! asa-swim-time-converter 2017 - 08 - 01  */

!function(){"use strict";(0,require("./index.js").getTimePromise)("50 Free","25m","50m","31.0").then(function(e){console.log(e)})}(),function(){"use strict";var e=require("./conversionTables/strokeTable"),o=require("./conversionTables/poolTable");console.debug=function(){};var r={getTimePromise:function(r,n,t,a){return new Promise(function(s,i){console.debug("converting "+r+" @ "+a+" from "+n+" to "+t);var c={},l={},u=0;e[r]?l=e[r]:i("ERR: Unrecognised Stroke"),a.match(/[0-9,:,.]/i)||i("ERR: Not a Valid Time"),(a.match(/:/g)||[]).length>1&&i("ERR: Not a Valid Time"),(a.match(/\./g)||[]).length>1&&i("ERR: Not a Valid Time");try{if(a.indexOf(":")>0){var g=a.split(":");u=60*parseFloat(g[0])+parseFloat(g[1])}else u=parseFloat(a)}catch(e){i("ERR: Incorrect Time Conversion Error: "+e)}o[n]?c=o[n]:i("ERR: Unrecognised Pool Length : From"),o[t]||i("ERR: Unrecognised Pool Length : To");try{var d=c.poolMeasureCase;console.debug(" - PoolMeasure     :",d);var m=c.numTurnPerHundred;console.debug(" - NumTurnPH       :",m);var R=l.distance;console.debug(" - Distance        :",R);var T=R;console.debug(" - timingInSeconds :",u),1500===R&&3===c.poolMeasureCase&&(T=1650),console.debug(" - D1             :",T);var b=R/100*(T/100)*(m-1);console.debug(" - NumbTurnFactor :",b);var v=l.TurnFactor;console.debug(" - TurnFactor     :",v);var h=0;h="50m"!==n?(u+Math.sqrt(u*u+4*d*v*b))/(2*d):u,console.debug(" - T50            :",h);var E=0,f=v/h;console.debug(" - TurnVal        :",f),E="50m"!==t?1*h-2*f:h,console.debug(" - Result Time    :",E),s(E.toFixed(1).toString())}catch(e){i("ERR: Conversion Error: "+e)}})},getTime:function(r,n,t,a){console.debug("converting "+r+" @ "+a+" from "+n+" to "+t);var s={},i={},c=0;if(!e[r])throw new Error("ERR: Unrecognised Stroke");if(i=e[r],console.debug("Read stroke table: ",i),!a.match(/[0-9,:,.]/i))throw new Error("ERR: Not a Valid Time");if((a.match(/:/g)||[]).length>1)throw new Error("ERR: Not a Valid Time");if((a.match(/\./g)||[]).length>1)throw new Error("ERR: Not a Valid Time");try{if(a.indexOf(":")>0){var l=a.split(":");c=60*parseFloat(l[0])+parseFloat(l[1])}else c=parseFloat(a)}catch(e){throw new Error("ERR: Incorrect Time Conversion Error: "+e)}if(!o[n])throw new Error("ERR: Unrecognised Pool Length : From");if(s=o[n],!o[t])throw new Error("ERR: Unrecognised Pool Length : To");try{var u=s.poolMeasureCase;console.debug(" - PoolMeasure     :",u);var g=s.numTurnPerHundred;console.debug(" - NumTurnPH       :",g);var d=i.distance;console.debug(" - Distance        :",d);var m=d;console.debug(" - timingInSeconds :",c),1500===d&&3===s.poolMeasureCase&&(m=1650),console.debug(" - D1             :",m);var R=d/100*(m/100)*(g-1);console.debug(" - NumbTurnFactor :",R);var T=i.TurnFactor;console.debug(" - TurnFactor     :",T);var b=0;b="50m"!==n?(c+Math.sqrt(c*c+4*u*T*R))/(2*u):c,console.debug(" - T50            :",b);var v=0,h=T/b;return console.debug(" - TurnVal        :",h),v="50m"!==t?1*b-2*h:b,console.debug(" - Result Time    :",v),v.toFixed(1).toString()}catch(e){throw new Error("ERR: Conversion Error: "+e)}}};module.exports=r}();